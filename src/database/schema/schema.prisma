datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum RoleName {
  User
  Administrator
}

model Role {
  id String @id @default(uuid())
  name RoleName @default(User)
  users User[]
}

model User {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  telegramUserId String @unique
  telegramUsername String?
  roles Role[]
  viewHistory ViewHistory[]
  favorites Favorite[]
  token RegistrationToken?
}

model ViewHistory {
  id String @id @default(cuid())
  igUserId String
  storyKey String
  userId String
  user User @relation(fields: [userId], references: [id])

  @@index([storyKey, igUserId])
}

model RegistrationToken {
  id String @id @default(uuid())
  value String @unique
  userId String?
  expiration DateTime?
  roles RoleName[]
  user User? @relation(fields: [userId], references: [id])
}

model Outbox {
  id String @id @default(cuid())
  metadata Json?
  content Json
}

model Favorite {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  hash String?
  type String
  alias String
  parameters Json?
  userId String
  user User @relation(fields: [userId], references: [id])

  @@index([hash])
}

model Saga {
  id String @id @default(uuid())
  type String
  activityId String?
  state String
  metadata Json?
  transitionAt DateTime?
  createdAt DateTime @default(now())
  faultedAt DateTime? 
  fault String?
  completedAt DateTime?
  initiatorId String?
  initiator User? @relation(fields: [initiatorId], references: [id])

  @@index([initiatorId, activityId])
}


model IgUser {
  id String @id @default(uuid())
  pk String @unique
  username String
  profilePicUrl String?
  fullname String?
  createdAt DateTime @default(now())
  followed IgUser[] @relation("follows", references: [id])
  following IgUser[] @relation("follows", references: [id])
}

enum InsightType {
  Followers
}

model Insight {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  groupId String
  type InsightType
  initiatorId String?
  expiration DateTime?
  content Json
  tokens InsightAccessToken[]
  initiator User? @relation(fields: [initiatorId], references: [id])

  @@index([groupId, expiration, initiatorId])
}

model InsightAccessToken {
  id String @id @default(uuid())
  token String @unique
  insightId String
  expiration DateTime?
  insight Insight @relation(fields: [insightId], references: [id])
}